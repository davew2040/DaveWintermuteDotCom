@model DataAccess.Models.BlogPost

@using TheDaveSite.Code;
@using DataAccess.Models;
@using TheDaveSite.ViewModels.Home;

@functions
{
    private string createCommentsRoot(BlogPost post)
    {
        var builder = new System.Text.StringBuilder();   
        
        foreach (var comment in post.Comments.Where(x => x.ParentId == null))
        {
            builder.Append(createComments(comment, post.Comments, 0));   
        }

        return builder.ToString();
    }
    
    private string createComments(BlogComment currentComment, ICollection<BlogComment> allComments, int level)
    {
        var builder = new System.Text.StringBuilder();

        builder.Append(Html.Partial("~/Views/Home/_BlogComment.cshtml", new BlogCommentViewModel()
            {
                AllComments = allComments,
                Comment = currentComment,
                Level = level
            }));
        
        foreach (var subComment in allComments.Where(x => x.ParentId == currentComment.Id))
        {
            builder.Append(createComments(subComment, allComments, level+1));
        }
       
        return builder.ToString();
    }
}

@{
    List<string> imageUrls = new List<string>();
    if (Model.ImageLinks != null)
    {
        imageUrls = Model.ImageLinks.Split(new string[] { "|" }, StringSplitOptions.RemoveEmptyEntries).ToList();
    }
}

    <div class="blogPost">
        <div class="blogPostHeader">
            <div class="blogPostTitle">@Model.Title </div>
            <div class="replyButton postReplyButton" data-postId="@Model.Id" data-commentId="0">Reply</div>
            <div class="blogPostInfo">By @Model.Author.FirstName, on <span class="postDate">@Model.PostDate.ToString("D")</span></div>
        </div>
        <div class="blogPostContent">
            @if (User.IsInRole("Admin"))
            {
                @: <a href="@Url.Action("EditBlogPost", new { @postId = Model.Id })">[Edit]</a><br /><br />
            }
            @Html.Raw(CommentsHelpers.formatPost(Model.Content))

            <br />
            @if (imageUrls.Any())
            {
                <div class="daveGallery daveImageLinkGallery" style="width:100%;height:150px;">
                    <ul>
                        @foreach (var img in imageUrls)
                        {
                            <li><img src="@img" /></li>
                        }
                    </ul>
                </div>
            }
            @if (Model.LinkedGallery != null)
            {
                <div style="margin-top: 10px; margin-bottom: 0px; font-size: 12px;text-align: center;">
                    @Html.ActionLink("[View Gallery]", "ViewGallery", "Galleries", new { id = Model.LinkedGalleryId }, null)
                </div>
                <div class="daveGallery daveRealGallery" style="width:100%;height:150px;">
                    <ul style="display: none;">
                        @foreach (var img in Model.LinkedGallery.Images)
                        {
                            <li><img src="@Url.Action("GetDatabaseImageThumbnail", "DatabaseImage", new { id = img.ImageId })" data-id="@img.ImageId"/></li>
                        }
                    </ul>
                </div>
            }

        </div>
        <div class="blogResponseTarget"></div>
        <div class="blogPostFooter">
            <div class="commentHeader">@Model.Comments.Count() comments.</div>
            @Html.Raw(createCommentsRoot(Model))
        </div>
    </div>